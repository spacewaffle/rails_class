<div id="course" class="schedule">
<h1>Overview</h1>

  <div class="rundown">
    <p>The RailsClass program is focused on giving beginners a deep dive into building full-fledged web applications. We'll start off by setting up your computer with all the tools you'll need to be an effective developer. Git, Ruby on Rails, Sublime Text, and the Command Line. Once that's done, we'll spend the next few weeks exploring fundamental programming concepts using the Ruby programming language. 
    </p>
    <p>
    After you've gotten the hang of Ruby, it's time to take the skills you've learned and build some web sites! We'll show you the ins and outs of Ruby on Rails, a powerful framework that uses Ruby to create dynamic web applications. With Ruby on Rails, you'll be able to build social networks, ecommerce platforms, customizable blogs, fitness trackers, and more. We want you to be personally invested in your work which is why we'll finish off the class with a final project you get to choose for yourself.</p>

  </div>

  <h2>How Class Works</h2>
  <p>
    Video lectures will be assigned at the tail end of each week to be studied in preparation for the next week's classes. If you have questions about the video lectures you can email either the class list or the instructors directly. The teaching staff will send out a graded quiz on the video lecture material to be completed before the start of the next class.  
  </p>
  <p>
    The next week's classes will focus on exercises utilizing the concepts in the video lectures. You'll be placed in small problem groups and work on exercises introduced at the start of class. Problem groups are not meant to work together on exercises, only for when a student gets blocked by a problem. If you run into problems or get stuck, google search and talk through the issue with your teammates. Often times, just vocalizing your issues can be enough to recognize the solution. Your teammates should also be able to help you solve the problem. If talking to your group mates fails, ask the teaching staff for help!
  </p>
  <p>
    Homework will consist of finishing the in-class exercises if you weren't able to complete them, and watching the video lectures for the next week.
  </p>

  <h2>Grading</h2>
  <p>
    You'll
  </p>

  <h2 id="syllabus">Syllabus</h2>
  <h3 class="unit_header">Unit 1: Ruby</h3>
  <h4>Installfest</h4>
  <p>We'll go over installing all the tools you'll need to program with Ruby on Rails and make sure your computer is ready to program.</p>

  <h4>Web Development Overview and Tools</h4>
  <p>A high level overview of how the web works. Once we have this understanding, we'll learn how to use our previously installed web development tools</p>

  <h4>Ruby Programming</h4>
  <p>Introduction to basic programming concepts. We'll cover variables, conditionals, loops, arrays, and more. This time is followed by project based lab sessions to solidify our ruby skills.</p>
  
  <h3 class="unit_header">Unit 2: Ruby on Rails</h3>

  <h4>Intro to MVC</h4>
  <p>An introduction to Ruby on Rails and the Model View Controller paradigm. We'll pick apart each step of the process to really see how Ruby on Rails works.</p>

  <h4>Active Record</h4>
  <p>
  Time to dive into databases! We'll take a look at how data is stored in a Rails application and how to access that data using Rails commands.</p>

  <h4>Views and Forms</h4>
  <p>An introduction to the Ruby on Rails templating system. We'll learn how to create Rails forms to edit and save data in our databases.</p>

  <h4>Gems and Final Project</h4>
  <p>Utilizing community created gems (addons), we'll add new features to our projects. We'll show you how to install and configure them</p>
  <p>Begin work on final project.</p>

  <h4>Deploying Your Site</h4>
  <p>Here we'll walk you through taking what you've been working on and putting it on the internet.</p>

  <h4>Using APIs</h4> 
  <p>We'll show you how to use the apis built into popular websites like Github, Facebook, and Stripe to do things like sign in users, take payments, and more.</p>

  <h4>Final Project Presentations</h4> 
  <p>Present your final projects to the class. Congrats, you made it!</p>

  <h2>Final Project</h2>
  <p>Final projects are a culmination of all the material our students have learned. They may include the following</p>
  <ul>
    <li>Some form of security so users must login to see certain pages</li>
    <li>Hosted online using a service like Heroku or Digital Ocean</li>
    <li>One or more gems (plugins) to extend functionality</li>
    <li>Have at least one association between two models</li>
    <li>Use data from a 3rd party api</li>
  </ul>

  <h2>Course Requirements</h2>
  <p>Students are required to attend at least 80% of classes, complete and submit 80% of homework, and present a final project that satisfies the above requirements in order to receive a pass.</p>

  <div class="directions">
    <h2 id="directions" >Directions & Parking</h2>
    <p>RailsClass is located at WorkBar Cambridge. On-street parking can be had on Bishop Allen Dr.
    Parking garages/lots are located at the corner of Franklin and Pearl Streets;  Bishop Allen & Essex Street;  Bishop Allen & Norfolk Street;  and on Green Street. Rates range from $13-$14 a day, with monthly rates also available.</p>

    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2947.8885025867035!2d-71.1032901!3d42.366215399999994!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e3775161ef4171%3A0x4ef9a58ba1e08a33!2s45+Prospect+St%2C+Cambridge%2C+MA+02139!5e0!3m2!1sen!2sus!4v1426992070756" width="600" height="450" frameborder="0" style="border:0"></iframe>

  </div>

  <h2 id="payment">Payment Policy</h2>
  <p>
    We accept payment via wave invoice or check. If paying via wave, you'll be able to pay via bank account, credit, or debit. You'll be responsible for the full amount of tuition by the end of the first week of class.
  </p>

  <h4>Refund Policy</h4>
  <p>
    While we'd be sad to see you go, we know that sometimes life can get in the way. If you need to leave the class early, we'll refund you for every quarter of the class you haven't taken. As an example, if you're in the second quarter of the class and you decide to drop, we'll refund you for the last two quarters you haven't taken.</p>
</div>